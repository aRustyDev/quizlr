[package]
name = "quizlr-core"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# Workspace dependencies
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }
chrono = { workspace = true }
uuid = { workspace = true }
config = { workspace = true }

# WASM support
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
getrandom = { version = "0.2", features = ["js"] }

# Graph algorithms
petgraph = { version = "0.6", features = ["serde-1"] }

# Cryptography
ring = { version = "0.17", optional = true }
base64 = "0.22"

# LLM integration  
genai = { version = "0.3", optional = true }

# HTTP client
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"], optional = true }

# GitHub API
octocrab = { version = "0.44", optional = true }

# PDF parsing
lopdf = { version = "0.35", optional = true }

# Storage and async
async-trait = "0.1"

# Random number generation
rand = "0.8"

# OpenTelemetry
opentelemetry = { version = "0.24", optional = true }
opentelemetry_sdk = { version = "0.24", features = ["rt-tokio"], optional = true }
tracing-opentelemetry = { version = "0.25", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { version = "0.3", features = [
    "Window",
    "Document",
    "Storage",
    "console",
] }
js-sys = "0.3"
console_error_panic_hook = "0.1"

[features]
default = ["native"]
native = ["reqwest", "octocrab", "genai", "tokio/net", "tokio/fs", "tokio/time", "opentelemetry", "opentelemetry_sdk", "tracing-opentelemetry", "ring", "lopdf"]
wasm = ["getrandom/js"]

[dev-dependencies]
mockall = { workspace = true }
tokio-test = "0.4"