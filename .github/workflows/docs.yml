name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
          
      - name: Build documentation
        run: |
          cd docs
          mdbook build
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/book
          
  # Test job - runs on PRs
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
          
      - name: Test documentation build
        run: |
          cd docs
          mdbook test
          
      - name: Check for broken links
        run: |
          cd docs
          mdbook build
          # Simple link checker - you might want to use a dedicated tool
          find book -name "*.html" -exec grep -l "404" {} \; | head -20
          
  # Deploy job - only runs on main branch
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Alternative deployment to Netlify (optional)
  deploy-netlify:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
          
      - name: Build documentation
        run: |
          cd docs
          mdbook build
          
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './docs/book'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        if: env.NETLIFY_AUTH_TOKEN != ''

  # Check documentation quality
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install markdown linter
        run: npm install -g markdownlint-cli
        
      - name: Lint markdown files
        run: |
          markdownlint docs/src/**/*.md --config .markdownlint.json || true
        continue-on-error: true
        
      - name: Check spelling
        uses: streetsidesoftware/cspell-action@v5
        with:
          files: "docs/src/**/*.md"
          config: "./cspell.json"
        continue-on-error: true